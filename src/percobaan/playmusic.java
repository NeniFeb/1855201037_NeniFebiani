/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package percobaan;

import uts.*;
import java.io.*;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

import java.text.Normalizer.Form;

import java.util.logging.Level;
import java.util.logging.Logger;


import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javazoom.jl.player.Player;

import javazoom.jl.decoder.JavaLayerException;

import javax.swing.JFileChooser;



/**
 *
 * @author ASUS
 */
public class playmusic extends javax.swing.JFrame {

    /**
     * Creates new form playmusic
     */
    public playmusic() {
        initComponents();
        this.setLocationRelativeTo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tambah = new javax.swing.JButton();
        play = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList();
        delet = new javax.swing.JButton();
        pause = new javax.swing.JButton();
        stop = new javax.swing.JButton();
        status = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GUDANG MUSIC");
        setBackground(new java.awt.Color(204, 255, 204));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tambah.setText("Add Music");
        tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });

        play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uts/icon/play.png"))); // NOI18N
        play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(list);

        delet.setText("Delet Music");
        delet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletActionPerformed(evt);
            }
        });

        pause.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uts/icon/pause.png"))); // NOI18N
        pause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseActionPerformed(evt);
            }
        });

        stop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uts/icon/stop1.png"))); // NOI18N
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });

        status.setForeground(new java.awt.Color(255, 0, 0));
        status.setText("STATUS  :  Tidak Memainkan Musik");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(delet, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(stop, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(play, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(pause, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pause, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(play, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stop, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delet, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        JFrame jf = new JFrame();
        int setuju = fc.showOpenDialog(jf.add(fc));
        int posisi = list.getModel().getSize();
        if(setuju == JFileChooser.APPROVE_OPTION){
            File file = fc.getSelectedFile();
            String text = file.getPath();
            String[] txt;
            txt = new String[]{text};
            model.add(posisi, text);
        }
        list.setModel(model);
    }//GEN-LAST:event_tambahActionPerformed

    private void playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playActionPerformed
        // TODO add your handling code here:
        if(player == null){
            
            String main = (String) list.getSelectedValue();
            status.setText(main);
            try {
                FileInputStream file = new FileInputStream(main);
                FIS = new FileInputStream(main);
            songTotalLength = FIS.available();
            BufferedInputStream bis = new BufferedInputStream(FIS);
            player = new Player(bis);
            
            fileLocation = main + "";
            } catch (FileNotFoundException ex) {
                Logger.getLogger(playmusic.class.getName()).log(Level.SEVERE, null, ex);
            } catch (JavaLayerException ex) {
                Logger.getLogger(playmusic.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(playmusic.class.getName()).log(Level.SEVERE, null, ex);
            }
            
//            try {
//        String play = (String) list.getSelectedValue();
//        status.setText(play);
//            FileInputStream inputfile = new FileInputStream(play);
//            FIS = new FileInputStream(play);
//            songTotalLength = FIS.available();
//            BufferedInputStream bis = new BufferedInputStream(FIS);
//            player = new Player(bis);
//            
//            fileLocation = play + "";
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(playmusic.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (IOException ex) {
//            Logger.getLogger(playmusic.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (JavaLayerException ex) {
//            Logger.getLogger(playmusic.class.getName()).log(Level.SEVERE, null, ex);
//        }
            
//            try {
//        String play = (String) list.getSelectedValue();
//        status.setText(play);
//            FileInputStream inputfile = new FileInputStream(play);
//            FIS = new FileInputStream(play);
//            songTotalLength = FIS.available();
//            BufferedInputStream bis = new BufferedInputStream(FIS);
//            player = new Player(bis);
//            
//            fileLocation = play + "";
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(playmusic.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (IOException ex) {
//            Logger.getLogger(playmusic.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (JavaLayerException ex) {
//            Logger.getLogger(playmusic.class.getName()).log(Level.SEVERE, null, ex);
//        }
        
        }else if(player != null){
         
          try {
             status.setText("Resume " + fileLocation);
             FIS = new FileInputStream(fileLocation);
             FIS.skip(songTotalLength - pauseLocation);
         BIS = new BufferedInputStream(FIS);
         
         player = new Player(BIS);
         } catch (FileNotFoundException ex) {
             Logger.getLogger(playmusic.class.getName()).log(Level.SEVERE, null, ex);
         } catch (IOException ex) {
             Logger.getLogger(playmusic.class.getName()).log(Level.SEVERE, null, ex);
         } catch (JavaLayerException ex) {
             Logger.getLogger(playmusic.class.getName()).log(Level.SEVERE, null, ex);
         }      
         
     
     }
     
     new Thread(){
     @Override
     public void run(){
         try {
             player.play();
         } catch (JavaLayerException ex) {
             Logger.getLogger(playmusic.class.getName()).log(Level.SEVERE, null, ex);
         }
     
     }
     
     }.start();
     
     
        
    }//GEN-LAST:event_playActionPerformed

    private void deletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletActionPerformed
        // TODO add your handling code here:
        int posisi = list.getSelectedIndex();
        model.remove(posisi);
        player.close();
    }//GEN-LAST:event_deletActionPerformed

    private void pauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseActionPerformed
        // TODO add your handling code here:
        if(player != null){
            try{
                pauseLocation = FIS.available();
                player.close();
            }catch(IOException ex){
                status.setText("Pause");
            }
        }
    }//GEN-LAST:event_pauseActionPerformed

    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        // TODO add your handling code here:
        player.close();
        if(player != null){
        player.close();
        pauseLocation = 0;
        songTotalLength = 0;
        status.setText("Musik stoppen");
        }
    }//GEN-LAST:event_stopActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(playmusic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(playmusic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(playmusic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(playmusic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new playmusic().setVisible(true);
            }
        });
    }
    
    FileInputStream FIS;
BufferedInputStream BIS;
public Player player;
public long pauseLocation;
public long songTotalLength; 
public String fileLocation;
      DefaultListModel model = new DefaultListModel();
    private Player mp3;
    int a = 0;

private boolean canResume;
private String path;
private int total;
private int stopped;
private boolean valid;
 private volatile boolean continuePlaying = true;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delet;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList list;
    private javax.swing.JButton pause;
    private javax.swing.JButton play;
    private javax.swing.JLabel status;
    private javax.swing.JButton stop;
    private javax.swing.JButton tambah;
    // End of variables declaration//GEN-END:variables
}
